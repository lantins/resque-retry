<h1>Delayed Jobs with Retry Information</h1>

<p class="intro">
  This list below contains the timestamps for scheduled delayed jobs with
  retry information.
</p>

<p class="sub">
  Showing <%= start = params[:start].to_i %> to <%= start + 20 %> of
  <b><%= size = resque.delayed_queue_schedule_size %></b> timestamps
</p>

<table>
  <tr>
    <th></th>
    <th>Timestamp</th>
    <th>Job count</th>
    <th>Class</th>
    <th>Args</th>
    <th>Retry Attempts</th>
  </tr>
  <% timestamps = resque.delayed_queue_peek(start, start+20) %>
  <% timestamps.each do |timestamp| %>
    <% job = resque.delayed_timestamp_peek(timestamp, 0, 1).first %>
    <% next unless job %>
    <% retry_key = retry_key_for_job(job) %>
    <tr>
      <td>
        <form action="<%= url "retry/#{timestamp}/remove" %>" method="post">
          <input type="hidden" name="timestamp" value="<%= timestamp.to_i %>">
          <input type="submit" value="Remove">
        </form>
        <form action="<%= url "/delayed/queue_now" %>" method="post">
          <input type="hidden" name="timestamp" value="<%= timestamp.to_i %>">
          <input type="submit" value="Queue now">
        </form>
      </td>
      <td><a href="<%= url "retry/#{timestamp}" %>"><%= format_time(Time.at(timestamp)) %></a></td>
      <td><%= delayed_timestamp_size = resque.delayed_timestamp_size(timestamp) %></td>
      <% if job && delayed_timestamp_size == 1 %>
        <td><%= h job['class'] %></td>
        <td><%= h job['args'].inspect %></td>
        <td><%= retry_attempts_for_job(job) || '<i>n/a</i>' %></td>
      <% else %>
        <td><a href="<%= url "retry/#{timestamp}" %>">see details</a></td>
        <td></td>
        <td></td>
      <% end %>
    </tr>
  <% end %>
</table>

<%= partial :next_more, :start => start, :size => size %>
